name: conifer
recipe: wordpress
config:
  webroot: wp
  php: '7.0'

services:
  appserver:
    run:
      - cd $LANDO_MOUNT && composer install
      - cd $LANDO_MOUNT && scripts/setup-wordpress.bash

    overrides:
      services:
        environment:
          # Pass any non-empty CI envvar from the host into Lando
          # This is so we can force non-interactive mode setting up WP
          CI: ${CI:-''}

  database:
    type: mysql:5.7

  node:
    type: node:6.11

    globals:
      newman: "1.3.2"
      yarn: "1.6.0"

    run:
      - cd $LANDO_MOUNT && yarn install

    overrides:
      services:
        image: 'sitecrafting/lando-node-cypress:latest'

  phpmyadmin:
    type: phpmyadmin:4.7

  mailhog:
    type: mailhog:v1.0.0
    hogfrom:
      - appserver

tooling:
  install:
    service: appserver
    cmd: '/app/scripts/setup-wordpress.bash'
    description: 'Install and configure WordPress for custom plugin dev'

  newman:
    service: node

  yarn:
    service: node

  debug:
    service: appserver
    cmd: 'tail -f /app/wp/wp-content/debug.log'
    description: 'Get real-time WP debug log output'

  e2e:
    service: node
    cmd: 'yarn cypress run'
    description: 'Run end-to-end tests'

  unit:
    service: appserver
    cmd: 'vendor/bin/phpunit'
    description: 'Run unit tests'

  sniff:
    service: appserver
    cmd: 'composer sniff'
    description: 'Run phpcs code sniffer'

  release:
    service: appserver
    cmd: '/app/scripts/build-release.sh'
    description: 'Build a downloadable release of the Conifer WordPress plugin'

proxy:
  appserver:
    - conifer.lndo.site

  mailhog:
    - mail.conifer.lndo.site
