name: conifer
recipe: wordpress
config:
  webroot: wp
  php: '8.1'

services:

  appserver:
    build_as_root:
      - apt-get update
      - apt-get install zip
      - apt-get install subversion -y

    build:
      - composer install
      - ./scripts/setup-wordpress.sh

  node:
    type: node:22
    build:
      - yarn && yarn docs:build

  database:
    type: mysql:5.7

  testdb:
    type: mysql:5.7
    portforward: true
    creds:
      user: test
      password: test
      database: test

  mailhog:
    type: mailhog:v1.0.0
    hogfrom:
      - appserver

  docs:
    type: nginx:1.18
    ssl: true
    webroot: docs/.vitepress/dist

tooling:
  clean:
    service: appserver
    cmd: 'rm -rf node_modules vendor *.tar.gz *.zip wp'

  install:
    service: appserver
    cmd: './scripts/setup-wordpress.sh'
    description: 'Install and configure WordPress for custom plugin dev'

  debug:
    service: appserver
    cmd: 'tail -f ./wp/wp-content/debug.log'
    description: 'Get real-time WP debug log output'

  unit:
    service: appserver
    cmd: './vendor/bin/phpunit --config phpunit.xml.dist'
    description: 'Run unit tests'

  integration:
    service: appserver
    cmd: './vendor/bin/phpunit --config phpunit-integration.xml.dist'
    description: 'Run integration tests'

  test:
    service: appserver
    cmd:
      - vendor/bin/phpunit --config phpunit.xml.dist
      - vendor/bin/phpunit --config phpunit-integration.xml.dist
    description: 'Run all unit and integration tests'

  install-tests:
    service: appserver
    cmd: './scripts/install-wp-tests.sh'
    description: 'Install the WP Unit Test suite'

  sniff-summary:
    service: appserver
    cmd: './vendor/bin/phpcs --report=summary --standard=./phpcs.xml test lib'
    description: 'Summarize PHPCS code sniffer findings'

  sniff:
    service: appserver
    cmd: './vendor/bin/phpcs --standard=./phpcs.xml test lib'
    description: 'Run PHPCS code sniffer on all test and production code'

  sniff-fix:
    service: appserver
    cmd: './vendor/bin/phpcbf --standard=./phpcs.xml test lib'
    description: 'Fix all automatically fixable issues found by PHPCS'

  analyze:
    service: appserver
    cmd: './vendor/bin/phpstan analyse'
    description: 'Run phpstan coding standards (level 1)'

  analyse:
    service: appserver
    cmd: './vendor/bin/phpstan analyse'
    description: 'Run phpstan coding standards (level 1)'

  ci:
    service: appserver
    cmd:
      - vendor/bin/phpunit --config phpunit.xml.dist
      - vendor/bin/phpunit --config phpunit-integration.xml.dist
      - vendor/bin/phpcs --standard=phpcs.xml test lib
      - vendor/bin/phpstan analyze

  phpstan:
    service: appserver
    cmd: './vendor/bin/phpstan'
    description: 'Run phpstan commands for static analysis'

  yarn:
    service: node
    cmd: 'yarn'
    description: 'Run yarn commands'

  docs:
    service: node
    cmd: 'yarn docs:build'
    description: 'Build Conifer docs'

  rector:
    service: appserver
    cmd: 'rector'
    description: 'Run Rector commands'

proxy:
  appserver:
    - conifer.lndo.site

  mailhog:
    - mail.conifer.lndo.site

  docs:
    - docs.conifer.lndo.site
