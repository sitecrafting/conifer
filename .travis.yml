# TravisCI configuration for sitecrafting/conifer

language: php
os:
  - linux
dist: bionic

php:
  - '7.4'
  - '7.3'
  - '7.2'
  - '7.1'
  - '7.0'

env:
  # Default to whatever is declared in composer.lock
  - TIMBER_VERSION=""
  - TIMBER_VERSION="2.x-dev"

cache:
  directories:
    - '${HOME}/.composer/cache'

jobs:
  include:
    - name: 'Coding standards'
      php: 7.3
      script:
        - composer run-script sniff --no-interaction

    - name: 'End-to-end tests with Lando/Cypress'
      language: node_js
      node_js: 10
      cache:
        - ~/.lando
        - ~/.cache
      before_install:
        - sudo apt-get -y update
        - sudo apt-get -y install cgroup-bin curl
        - curl -fsSL -o /tmp/lando-latest.deb https://github.com/lando/lando/releases/download/v3.0.0-aft.2/lando-v3.0.0-aft.2.deb
        - sudo dpkg -i /tmp/lando-latest.deb
        - lando version
      install:
        - lando start
        - yarn install --frozen-lockfile
      script:
        - lando e2e
      after_failure:
        - curl --upload-file ./cypress/videos/conifer.spec.js.mp4 https://transfer.sh/conifer.spec.js.mp4

    - name: 'Building docs'
      language: node_js
      node_js: 10
      cache:
        - ~/.lando
        - ~/.cache
      before_install:
        - sudo apt-get -y update
        - sudo apt-get -y install cgroup-bin curl
        - curl -fsSL -o /tmp/lando-latest.deb https://github.com/lando/lando/releases/download/v3.0.0-aft.2/lando-v3.0.0-aft.2.deb
        - sudo dpkg -i /tmp/lando-latest.deb
        - lando version
      install:
        - lando start
        - yarn install --frozen-lockfile
      script:
        - lando gitbook
        - lando docs
        # TODO Check that docs site is actually running?
      after_failure:
        - curl --upload-file ./cypress/videos/conifer.spec.js.mp4 https://transfer.sh/conifer.spec.js.mp4

    - name: 'Test VVV provisioning'
      language: node_js
      node_js: 10
      cache:
        - ~/.cache
        - /var/www/.cache
      install: skip
      script:
        - vvv-utilities/provision.sh

  allow_failures:
    - name: 'Test VVV provisioning'
    - env: TIMBER_VERSION="2.x-dev"

install:
  - composer install --no-interaction --prefer-dist
  - if [ -n "$TIMBER_VERSION" ]; then composer require --no-interaction --dev "timber/timber:$TIMBER_VERSION"; fi

script:
  - vendor/bin/phpunit
  - vendor/bin/phpcs
